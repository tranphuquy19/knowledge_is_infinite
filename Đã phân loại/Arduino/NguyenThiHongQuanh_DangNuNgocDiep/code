
#include <Graphics.h>
#inc loại <math.h>
#define VÒNG (a) ((int) (a + 0,5))

#define OUT2IN 1
#define TRONG 2
#define IN2OUT 3
#define NGOÀI 4
#define LIÊN QUAN 5

// khai bao bien
int xc [100];
int yc [100];
int wx [100];
int wy [100];
int pointsize;
int windowsize;
int xc_tam [100];
int yc_tam [100];
int pointsize_tam;


// chuong trinh con
void draw_object ()
{
  int i;
  // ve ca canh cua da giac
  setcolor (ĐỎ);
  for (i = 0; i <pointsize; i ++)
  {
    dòng (xc [i], yc [i], xc [(i + 1)% pointsize], yc [(i + 1)% pointsize]);
    độ trễ (1000);
  }
  // ve cac canh cua so clipping
  setcolor (XANH LÁ);
  cho (i = 0; i <windowsize; i ++)
  {
    dòng (wx [i], wy [i], wx [(i + 1)% windowsize], wy [(i + 1)% windowsize]);
    độ trễ (1000);
  }
}

// nhap thong vậy
void nhapdulieu ()
{
  int i;

  printf ("Nhap so canh cua da giac =");
  scanf ("% d", & pointsize);
  
  for (i = 0; i <pointsize; i ++)
  {
    printf ("Toa do x cho canh% d =", i);
    quét ("% d", & xc [i]);
    printf ("Toa do y cho canh% d =", i);
    quét ("% d", & yc [i]);
  }

  printf ("Nhap so canh cua cua so clipping =");
  scanf ("% d", & windowsize);
  
  cho (i = 0; i <windowsize; i ++)
  {
    printf ("Toa do x cho canh window% d =", i);
    quét ("% d", & wx [i]);
    printf ("Toa do y cho canh window% d =", i);
    quét ("% d", & wy [i]);
  }
}

int clipLeft (int x, int x1, int x2)
{
  if (x1 <x && x2> = x)
  {
    trả lại OUT2IN;
  }
  khác 
  {
    if (x1> = x && x2> = x)
    {
      trở lại bên trong;
    }  
    khác 
    {
      if (x1> = x && x2 <x)
      {
        trả lại IN2OUT;
      }
      khác 
      {
        if (x1 <x && x2 <x)
        {
          trả lại NGOÀI TRỜI;
        }
        khác
        {
          trả lại HÓA ĐƠN;
        }
      }   
    }   
  }     
}

int clipBottom (int y, int y1, int y2)
{
    if (y1 <y && y2> = y)
    {
      trả lại OUT2IN;
    }  
    khác
    {
      if (y1> = y && y2> = y)
      {
        trở lại bên trong;
      }
      khác 
      {
        if (y1> = y && y2 <y)
        {
          trả lại IN2OUT;
        }
        khác 
        {
          if (y1 <y && y2 <y)
          { 
            trả lại NGOÀI TRỜI;
          }
          khác
          {
            trả lại HÓA ĐƠN;
          }
        } 
      }  
    } 
}

int clipRight (int x, int x1, int x2)
{
  if (x1> x && x2 <= x)
  {
     trả lại OUT2IN;
  }      
  khác
  {
    if (x1 <= x && x2 <= x)
    {
      trở lại bên trong;
    }
    khác
    {
      if (x1 <= x && x2> x)
      {
       trả lại IN2OUT;
      }
      khác
      {
        if (x1> x && x2> x)
        {
          trả lại NGOÀI TRỜI;
        }
        khác
        {
          trả lại HÓA ĐƠN;
        }
      }
    }
  }     
}

int clipTop (int y, int y1, int y2)
{
  if (y1> y && y2 <= y)
  {
    trả lại OUT2IN;
  }
  khác
  {
    if (y1 <= y && y2 <= y)
    {
      trở lại bên trong;
    }
    khác
    {
      if (y1 <= y && y2> y)
      { 
        trả lại IN2OUT;
      }
      khác
      {
        if (y1> y && y2> y)
        {
          trả lại NGOÀI TRỜI;
        }
        khác
        {
          trả lại HÓA ĐƠN;
        }
      }
    }
  }
}

void leftclipper ()
{
  int chiêu;
  int i;
  int xwmin;
  int xa;
  int ya;
  int xb;
  int yb;
  int j;
  int xnew;
  int ynew;

  xwmin = wx [0]; // dinh 1
  j = 0;

  for (i = 0; i <pointsize; i ++)
  {
    xa = xc [i];
    ya = yc [i];
    xb = xc [i + 1];
    yb = yc [i + 1];
    
    chieu = clipLeft (xwmin, xa, xb);
    chuyển (chiêu)
    {
      trường hợp OUT2IN:
      {
        xnew = xwmin;
        ynew = ya + (float) (yb-ya) * (float) (xwmin-xa) / (float) (xb-xa);
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        xc_tam [j] = xb;
        yc_tam [j] = yb;
        j ++;
        phá vỡ;
      }
      trường hợp bên trong:
      {
        xnew = xb;
        ynew = yb;
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        phá vỡ;
      }  
      trường hợp KHÔNG CÓ:
      {
        xnew = xwmin;
        ynew = ya + (float) (yb-ya) * (float) (xwmin-xa) / (float) (xb-xa);
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        phá vỡ;
      }     
      trường hợp NGOÀI TRỜI:
      {
        phá vỡ;
      }
    }
    printf ("\ n chieu =% d \ n", chieu);
  }

  // gan lai danh sach canh moi
  cho (i = 0; i <j; i ++)
  {
    xc [i] = xc_tam [i];
    yc [i] = yc_tam [i];
  } 
  // gan so dinh moi sau khi leftclipper
  điểm = j;

  cho (i = 0; i <j; i ++)
  {
    printf ("(% d,% d);", xc [i], yc [i]);
  }
  printf ("\ n");
 
}

void rightclipper ()
{
 int chiêu;
  int i;
  int xwmax;
  int xa;
  int ya;
  int xb;
  int yb;
  int j;
  int xnew;
  int ynew;

  xwmax = wx [2] ;; // dinh 3
  j = 0;

  for (i = 0; i <pointsize; i ++)
  {
    xa = xc [i];
    ya = yc [i];
    xb = xc [i + 1];
    yb = yc [i + 1];
    
    chieu = clipRight (xwmax, xa, xb);
    chuyển (chiêu)
    {
      trường hợp OUT2IN:
      {
        xnew = xwmax;
        ynew = ya + (float) (yb-ya) * (float) (xwmax-xa) / (float) (xb-xa);
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        xc_tam [j] = xb;
        yc_tam [j] = yb;
        j ++;
        phá vỡ;
      }
      trường hợp bên trong:
      {
        xnew = xb;
        ynew = yb;
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        phá vỡ;
      }  
      trường hợp KHÔNG CÓ:
      {
        xnew = xwmax;
        ynew = ya + (float) (yb-ya) * (float) (xwmax-xa) / (float) (xb-xa);
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        phá vỡ;
      }     
      trường hợp NGOÀI TRỜI:
      {
        phá vỡ;
      }
    }
    printf ("\ n chieu =% d \ n", chieu);
  }

  // gan lai danh sach canh moi
  cho (i = 0; i <j; i ++)
  {
    xc [i] = xc_tam [i];
    yc [i] = yc_tam [i];
  } 
  // gan so dinh moi sau khi rightclipper
  điểm = j;

  cho (i = 0; i <j; i ++)
  {
    printf ("(% d,% d);", xc [i], yc [i]);
  }
  printf ("\ n");
}

void bottomclipper ()
{
  int chiêu;
  int i;
  int ywmax;
  int xa;
  int ya;
  int xb;
  int yb;
  int j;
  int xnew;
  int ynew;

  ywmax = wy [2]; // dinh 3
  j = 0;

  for (i = 0; i <pointsize; i ++)
  {
    xa = xc [i];
    ya = yc [i];
    xb = xc [i + 1];
    yb = yc [i + 1];
    
    chieu = clipTop (ywmax, ya, yb);
    chuyển (chiêu)
    {
      trường hợp OUT2IN:
      {
        xnew = xa + (float) (ywmax-ya) * (xb-xa) / (yb-ya);
        ynew = ywmax;
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        xc_tam [j] = xb;
        yc_tam [j] = yb;
        j ++;
        phá vỡ;
      }
      trường hợp bên trong:
      {
        xnew = xb;
        ynew = yb;
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        phá vỡ;
      }  
      trường hợp KHÔNG CÓ:
      {
        xnew = xa + (float) (ywmax-ya) * (xb-xa) / (yb-ya);
        ynew = ywmax;
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        phá vỡ;
      }     
      trường hợp NGOÀI TRỜI:
      {
        phá vỡ;
      }
    }
    printf ("\ n chieu =% d \ n", chieu);
  }

  // gan lai danh sach canh moi
  cho (i = 0; i <j; i ++)
  {
    xc [i] = xc_tam [i];
    yc [i] = yc_tam [i];
  } 
  // gan so dinh moi sau khi rightclipper
  điểm = j;

  cho (i = 0; i <j; i ++)
  {
    printf ("(% d,% d);", xc [i], yc [i]);
  }
  printf ("\ n");
}

khoảng trống topclipper ()
{
  int chiêu;
  int i;
  int ywmin;
  int xa;
  int ya;
  int xb;
  int yb;
  int j;
  int xnew;
  int ynew;

  ywmin = wy [0]; // dinh 1
  j = 0;

  for (i = 0; i <pointsize; i ++)
  {
    xa = xc [i];
    ya = yc [i];
    xb = xc [i + 1];
    yb = yc [i + 1];

    chieu = clipBottom (ywmin, ya, yb);
    
    chuyển (chiêu)
    {
      trường hợp OUT2IN:
      {
        xnew = xa + (float) (ywmin-ya) * (xb-xa) / (yb-ya);
        ynew = ywmin;
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        xc_tam [j] = xb;
        yc_tam [j] = yb;
        j ++;
        phá vỡ;
      }
      trường hợp bên trong:
      {
        xnew = xb;
        ynew = yb;
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        phá vỡ;
      }  
      trường hợp KHÔNG CÓ:
      {
        xnew = xa + (float) (ywmin-ya) * (xb-xa) / (yb-ya);
        ynew = ywmin;
        xc_tam [j] = xnew;
        yc_tam [j] = ynew;
        j ++;
        phá vỡ;
      }     
      trường hợp NGOÀI TRỜI:
      {
        phá vỡ;
      }
    }
    printf ("\ n chieu =% d \ n", chieu);
  }

  // gan lai danh sach canh moi
  cho (i = 0; i <j; i ++)
  {
    xc [i] = xc_tam [i];
    yc [i] = yc_tam [i];
  } 
  // gan so dinh moi sau khi rightclipper
  điểm = j;

  cho (i = 0; i <j; i ++)
  {
    printf ("(% d,% d);", xc [i], yc [i]);
  }
  printf ("\ n");
}


void draw_object_afterclip ()
{
  int i;
  // ve ca canh cua da giac
  setcolor (VÀNG);
  setlinestyle (1,0,1);
  for (i = 0; i <pointsize; i ++)
  {
    dòng (xc [i], yc [i], xc [(i + 1)% pointsize], yc [(i + 1)% pointsize]);
    độ trễ (1000);
  }
}

// chuong trinh chinh
int chính ()
{
  nhapdulieu ();
  initwindow (800.800);
  draw_object ();
  // gan họ 1 dinh o cuoi cung chinh la dinh xuat phat
  xc [pointsize] = xc [0];
  yc [pointsize] = yc [0];
  
  trái ();
  // gan họ 1 dinh o cuoi cung chinh la dinh xuat phat
  xc [pointsize] = xc [0];
  yc [pointsize] = yc [0];
  tay phải ();
  // gan họ 1 dinh o cuoi cung chinh la dinh xuat phat
  xc [pointsize] = xc [0];
  yc [pointsize] = yc [0];
  khóa đáy ();
  // gan họ 1 dinh o cuoi cung chinh la dinh xuat phat
  xc [pointsize] = xc [0];
  yc [pointsize] = yc [0];
  topclipper ();
  
  draw_object_afterclip ();

  getch ();
  trả về 0;
}
